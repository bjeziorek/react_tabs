{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","onTabSelected","tabs","selectedTabId","checkedSelectedTabId","find","tab","id","className","map","tabItem","title","href","onClick","filter","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EACT,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cAClBC,EACFF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAC1BA,EACAD,EAAK,GAAGK,GAEd,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAC,GACR,IAAQH,EAAcG,EAAdH,GAAII,EAAUD,EAAVC,MAEZ,OACE,oBAEEH,UAAS,UAAKJ,IAAyBG,EACnC,YACA,IACJ,UAAQ,MALV,SAOE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,WACHN,IAAOH,GACTH,EAAcS,IALpB,SASGC,KAfEJ,UAuBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGN,EACEY,QAAO,SAAAJ,GAAO,OAAIA,EAAQH,KAAOH,KAAsB,GAAGW,cC1C1Db,EAAO,CAClB,CAAEK,GAAI,QAASI,MAAO,QAASI,QAAS,eACxC,CAAER,GAAI,QAASI,MAAO,QAASI,QAAS,eACxC,CAAER,GAAI,QAASI,MAAO,QAASI,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAcf,EAAK,IAAzD,mBAAOgB,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAAYP,SAGlC,cAAC,EAAD,CACER,cAAee,EAAYX,GAC3BL,KAAMA,EACND,cAbgB,SAACK,GACrBa,EAAeb,UCdnBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.326b6bcc.chunk.js","sourcesContent":["import { Tab } from '../../react-app-env';\n\ninterface TabsProps {\n  onTabSelected:(tab:Tab)=>void,\n  selectedTabId: string,\n  tabs: Tab[],\n}\n\nexport const Tabs: React.FC<TabsProps>\n  = ({ onTabSelected, tabs, selectedTabId }) => {\n    const checkedSelectedTabId\n      = tabs.find(tab => tab.id === selectedTabId)\n        ? selectedTabId\n        : tabs[0].id;\n\n    return (\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tabItem => {\n              const { id, title } = tabItem;\n\n              return (\n                <li\n                  key={id}\n                  className={`${checkedSelectedTabId === id\n                    ? 'is-active'\n                    : ''}`}\n                  data-cy=\"Tab\"\n                >\n                  <a\n                    href={`#${id}`}\n                    data-cy=\"TabLink\"\n                    onClick={() => {\n                      if (id !== checkedSelectedTabId) {\n                        onTabSelected(tabItem);\n                      }\n                    }}\n                  >\n                    {title}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {tabs\n            .filter(tabItem => tabItem.id === checkedSelectedTabId)[0].content}\n        </div>\n      </div>\n    );\n  };\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './react-app-env';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState<Tab>(tabs[0]);\n\n  const onTabSelected = (tab:Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        selectedTabId={selectedTab.id}\n        tabs={tabs}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}